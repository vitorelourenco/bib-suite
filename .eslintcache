[{"/home/vitor/Desktop/personal/km_tag/src/components/TagsPanel/FSConfig.js":"1","/home/vitor/Desktop/personal/km_tag/src/components/ImagePanel/ImagePanel.js":"2","/home/vitor/Desktop/personal/km_tag/src/App.js":"3","/home/vitor/Desktop/personal/km_tag/src/components/TagsPanel/PicturesList/TagRow.js":"4","/home/vitor/Desktop/personal/km_tag/src/components/TagsPanel/PicturesList/PicturesList.js":"5","/home/vitor/Desktop/personal/km_tag/src/index.js":"6","/home/vitor/Desktop/personal/km_tag/src/components/TagsPanel/ConfirmationModal.js":"7","/home/vitor/Desktop/personal/km_tag/src/helper_functions/fileHandling.js":"8","/home/vitor/Desktop/personal/km_tag/src/components/Button.js":"9","/home/vitor/Desktop/personal/km_tag/src/components/TagsPanel/TagsPanel.js":"10","/home/vitor/Desktop/personal/km_tag/src/components/TagsPanel/BibInput.js":"11","/home/vitor/Desktop/personal/km_tag/src/styles/GlobalStyles.js":"12","/home/vitor/Desktop/personal/km_tag/src/components/TagsPanel/BibList.js":"13","/home/vitor/Desktop/personal/km_tag/src/contexts/CurrentImage.js":"14","/home/vitor/Desktop/personal/km_tag/src/contexts/Images.js":"15","/home/vitor/Desktop/personal/km_tag/src/defaultGaleries.js":"16"},{"size":4835,"mtime":1625677405536,"results":"17","hashOfConfig":"18"},{"size":1846,"mtime":1625596660475,"results":"19","hashOfConfig":"18"},{"size":1888,"mtime":1625677054734,"results":"20","hashOfConfig":"18"},{"size":1303,"mtime":1625607870828,"results":"21","hashOfConfig":"18"},{"size":2165,"mtime":1625667873866,"results":"22","hashOfConfig":"18"},{"size":262,"mtime":1612026608000,"results":"23","hashOfConfig":"18"},{"size":2114,"mtime":1625602627812,"results":"24","hashOfConfig":"18"},{"size":1871,"mtime":1625583226571,"results":"25","hashOfConfig":"18"},{"size":2355,"mtime":1625500038121,"results":"26","hashOfConfig":"18"},{"size":2780,"mtime":1625607870828,"results":"27","hashOfConfig":"18"},{"size":4565,"mtime":1625677679221,"results":"28","hashOfConfig":"18"},{"size":1505,"mtime":1625513904733,"results":"29","hashOfConfig":"18"},{"size":1337,"mtime":1625675927617,"results":"30","hashOfConfig":"18"},{"size":107,"mtime":1625416480487,"results":"31","hashOfConfig":"18"},{"size":95,"mtime":1625415957765,"results":"32","hashOfConfig":"18"},{"size":252074,"mtime":1625679457944,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"1a7xt18",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/vitor/Desktop/personal/km_tag/src/components/TagsPanel/FSConfig.js",["76","77"],"import { Button, LeftButton, RightButton } from '../Button';\nimport { getDirAsync, saveFilePathAsync, getJPEGsFromFolder, getCSVPathAsync, bareCSVfile} from '../../helper_functions/fileHandling';\nimport { useContext, useState, useEffect} from 'react';\nimport Images from '../../contexts/Images';\nimport styled from 'styled-components';\nimport CurrentImage from '../../contexts/CurrentImage';\n\nconst fs = window.require('fs');\nconst pathModule = window.require('path')\n\nconst jpgRegExp = new RegExp(/(.jpg$)|(.JPG$)|(.jpeg$)|(.JPEG$)/);\n\nexport default function FSConfig({setPicturesList, setCSVFile, CSVFile}){\n  const {lowResImages, setLowResImages, setHighResImages, tags, setTags} = useContext(Images);\n  const {currentImage, setCurrentImage, setCurrentIndex} = useContext(CurrentImage);\n\n  const [isHidden, setIsHidden] = useState(false);\n  \n  const [srcDir, setSrcDir] = useState(\"\");\n  const [highResDir, setHighResDir] = useState(\"\");\n\n  useEffect(()=>{\n    const lowResPaths = getJPEGsFromFolder(srcDir);\n    const lowResImages = {};\n    lowResPaths.forEach(path=>{\n      const fullName = pathModule.basename(path);\n      const name = fullName.replace(jpgRegExp, \"\");\n      lowResImages[name] = path;\n    })\n    setLowResImages(lowResImages);\n  },[srcDir]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(()=>{\n    const highResPaths = getJPEGsFromFolder(highResDir);\n    const highResImages = {};\n    highResPaths.forEach(path=>{\n      const fullName = pathModule.basename(path);\n      const name = fullName.replace(jpgRegExp, \"\");\n      highResImages[name] = path;    \n    });\n    setHighResImages(highResImages);\n  },[highResDir]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  //loadcsv\n  useEffect(()=>{\n    const picturesList = [];\n    const csvImages = {};\n    try {\n      const buf = fs.readFileSync(CSVFile);\n      const csvStr = buf.toString().split(\"\\r\\n\");\n      if (csvStr.length < 1){\n        alert(\"Empty CSV\");\n        return;\n      }\n      for (let i=0; i< csvStr.length; i++){\n        const cells = csvStr[i].split(\";\")\n        if (cells[0] === \"\") continue;\n        const cellsSlice = cells.slice(1,);\n        const filteredCells = cellsSlice.filter(elem=>elem!==\"\");\n        csvImages[cells[0]] = filteredCells;\n        picturesList.push(cells[0]);\n      }\n      setTags(csvImages);\n      setPicturesList(picturesList);\n      setCurrentImage(picturesList[0]);\n      setCurrentIndex(0);\n    } catch (err) {\n      console.log(err);\n      console.log(\"err at load csv\")\n    }\n  },[CSVFile]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <TopWrapper isHidden={isHidden}>\n        <Button\n          className=\"FSOptions--lowResDir-set\"\n          variant=\"primary\"\n          onClick={() => getDirAsync().then(dir=>{if(dir) setSrcDir(dir)})}\n        >\n          Set <strong>low res</strong> jpg dir\n        </Button>\n        <h4 className=\"FSOptions--lowResDir-show\">{srcDir}</h4>\n\n        <Button\n          className=\"FSOptions--highResDir\"\n          disabled={srcDir?false:true}\n          variant=\"primary\"\n          onClick={() => getDirAsync().then(dir=>{if(dir) setHighResDir(dir)})}\n        >\n          Set <strong>high res</strong> jpg dir\n        </Button>\n        <h4>{highResDir}</h4>\n\n        <LeftButton\n          variant=\"primary\"\n          disabled={srcDir?false:true}\n          onClick={() =>{\n            getCSVPathAsync()\n            .then(file=>{\n              if (!file) return;\n              if (file === CSVFile) return alert(\"Can't load the same file\");\n              setCSVFile(file);\n              document.querySelector(\"#input-box\").focus();\n            });\n          }}\n        >\n          <strong>Load</strong> csv\n        </LeftButton>\n        <RightButton\n          disabled={srcDir?false:true}\n          variant=\"primary\"\n          onClick={() => {\n            saveFilePathAsync()\n            .then(file=>{\n              if (!file) return;\n              if (file === CSVFile) return alert(\"Can't overwrite the same file\");\n              bareCSVfile(file, lowResImages);\n              setCSVFile(file);\n              document.querySelector(\"#input-box\").focus();\n            });\n          }}\n        >\n          New <strong>bare</strong> csv\n        </RightButton>\n        <h4>{CSVFile}</h4>\n\n        <Button\n          className=\"always-show\"\n          variant={isHidden ? \"include\" : \"ditch\"}\n          onClick={() =>\n            setIsHidden(!isHidden)\n          }\n        >\n          {isHidden ? \"Show FS Options\" : \"Hide FS Options\"}\n        </Button>\n      </TopWrapper>\n  )\n}\n\nconst TopWrapper = styled.div`\n  border-radius: 6px;\n  margin-bottom: 10px;\n  box-shadow: 0 0 3px rgba(0,0,0, 0.5);\n  background-color: #eee;\n  button, h4{\n    display: ${props=>props.isHidden ? \"none\" : \"\"};\n  }\n\n  .always-show{\n    display: block;\n  }\n`;","/home/vitor/Desktop/personal/km_tag/src/components/ImagePanel/ImagePanel.js",[],"/home/vitor/Desktop/personal/km_tag/src/App.js",[],["78","79"],"/home/vitor/Desktop/personal/km_tag/src/components/TagsPanel/PicturesList/TagRow.js",["80"],"import styled from 'styled-components'\nimport React, { useRef } from 'react'\n\nfunction TagRow(props) {\n  const {setCurrentImage, setCurrentIndex, isCurrentImage, tagsOfPicture, picture, picturesList, tagsString} = props;\n  const ref = useRef(null)\n\n  return (\n    <TopWrapper\n      className={isCurrentImage ? 'current' : 'other'}\n      id={picture}\n      onClick={() => {\n        const image = ref?.current?.textContent\n        if (image) {\n          setCurrentImage(image);\n          setCurrentIndex(picturesList.indexOf(picture));\n        }\n      }}\n    >\n      <p ref={ref} className=\"left\">\n        {picture}\n      </p>\n      <p className=\"right\">{tagsOfPicture?.join(\";\")}</p>\n    </TopWrapper>\n  )\n}\n\nconst MemoizedTagRow = React.memo(TagRow, (prevProps, nextProps)=>{\n  if (prevProps.isCurrentImage !== nextProps.isCurrentImage) return false;\n  if (prevProps.tagsString !== nextProps.tagsString) return false;\n  return true;\n});\n\nexport default MemoizedTagRow;\n\nconst TopWrapper = styled.li`\n  display: grid;\n  grid-template-columns: 18ch 1fr;\n  border-bottom: 1px solid #333;\n  cursor: pointer;\n\n  &.current {\n    background-color: green !important;\n    outline: 1px solid orange;\n  }\n\n  .left {\n    border-right: 1px solid #333;\n  }\n\n  p {\n    word-break: break-all;\n    padding: 0.5ch;\n  }\n`\n",["81","82"],"/home/vitor/Desktop/personal/km_tag/src/components/TagsPanel/PicturesList/PicturesList.js",[],["83","84"],"/home/vitor/Desktop/personal/km_tag/src/index.js",[],"/home/vitor/Desktop/personal/km_tag/src/components/TagsPanel/ConfirmationModal.js",[],"/home/vitor/Desktop/personal/km_tag/src/helper_functions/fileHandling.js",["85","86","87","88"],"import { existsSync, writeFileSync, readFileSync } from 'fs'\n\nconst electron = window.require('electron')\nconst remote = electron.remote\nconst { dialog } = remote\n\nconst fs = window.require('fs')\nconst pathModule = window.require('path')\n\nconst { app } = window.require('@electron/remote')\nconst appPath = app.getAppPath()\n\nexport async function getDirAsync() {\n  const dialogChoice = await dialog.showOpenDialog({\n    properties: ['openDirectory', 'createDirectory', 'promptToCreate']\n  })\n  if (dialogChoice.canceled) return \"\";\n  const dir = dialogChoice.filePaths[0]\n  return dir\n}\n\nexport async function saveFilePathAsync() {\n  const dialogChoice = await dialog.showSaveDialog({\n    properties: ['createDirectory'],\n    filters: [\n      {\n        name: 'CSV file',\n        extensions: ['csv']\n      }\n    ]\n  })\n  if (dialogChoice.canceled) return \"\"\n  const path = dialogChoice.filePath;\n  if (/.csv$/.test(path)) return path;\n  else return path+'.csv';\n}\n\nexport async function getCSVPathAsync(){\n  const dialogChoice = await dialog.showOpenDialog({\n    properties: ['openFile'],\n    filters: [\n      {\n        name: 'CSV file',\n        extensions: ['csv']\n      }\n    ]\n  });\n  if (dialogChoice.canceled) return \"\";\n  return dialogChoice?.filePaths[0];\n}\n\nexport function getJPEGsFromFolder(dir) {\n  try {\n    const allFiles = fs.readdirSync(dir)\n    const jpgRegExp = new RegExp(/(.jpg$)|(.JPG$)|(.jpeg$)|(.JPEG$)/)\n    const jpgFiles = allFiles.filter(f => jpgRegExp.test(f))\n    const jpgPaths = jpgFiles.map(file => pathModule.join(dir, file))\n\n    return jpgPaths\n  } catch (err) {\n    console.log(err)\n    if (dir === '') return []\n    else alert(`Can't load from folder: ${dir}`)\n  }\n}\n\nexport function bareCSVfile(path, obj){\n  const keys = Object.keys(obj);\n  const str = keys.reduce((acc, item) => acc += item+\";\\r\\n\",\"\")\n  fs.writeFileSync(path,str)\n}\n",["89","90"],"/home/vitor/Desktop/personal/km_tag/src/components/Button.js",[],"/home/vitor/Desktop/personal/km_tag/src/components/TagsPanel/TagsPanel.js",[],"/home/vitor/Desktop/personal/km_tag/src/components/TagsPanel/BibInput.js",["91"],"import { useContext, useEffect, useMemo } from 'react'\nimport CurrentImage from '../../contexts/CurrentImage'\nimport Images from '../../contexts/Images'\nimport TextField from '@material-ui/core/TextField'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport { useState } from 'react'\n\nexport default function BibInput({picturesList}){\n  const [value, setValue] = useState('')\n  const [clock, setClock] = useState(true);\n  const {galeries} = useContext(Images);\n  const [isDisabled, setIsDisabled] = useState(true);\n\n  const {\n    currentImage,\n    setCurrentImage,\n    currentIndex,\n    setCurrentIndex\n  } = useContext(CurrentImage)\n  const { lastTag, setLastTag, tags, setTags } = useContext(Images)\n\n  function addTag(value) {\n    if (tags[currentImage].includes(value)) {\n      setValue('')\n      return\n    }\n    if (value !== '') {\n      tags[currentImage].push(value)\n      setTags({ ...tags })\n    } else {\n      if (tags[currentImage].length > 0) setLastTag([...tags[currentImage]])\n      next(currentIndex, picturesList.length - 1)\n    }\n    setValue('')\n  }\n  \n  useEffect(()=>{\n    if (picturesList?.length){\n      setIsDisabled(false);\n    }\n  },[picturesList])\n\n  const okTime = useMemo(()=>{\n    return Date.now();\n  },[clock])\n\n  function handleKeyDown(e) {\n    switch (e.key) {\n      case 'ArrowRight': {\n        e.preventDefault()\n        if (e.repeat) {\n          const timeAtRepeat = Date.now();\n          if (timeAtRepeat-okTime > 100){\n            next(currentIndex, picturesList.length - 1)\n            setClock(!clock)\n          }\n          return\n        }\n\n        next(currentIndex, picturesList.length - 1)\n        break\n      }\n      case 'ArrowLeft': {\n        e.preventDefault()\n        if (e.repeat) {\n          const timeAtRepeat = Date.now();\n          if (timeAtRepeat-okTime > 100){\n            previous(currentIndex, picturesList.length - 1)\n            setClock(!clock)\n          }\n          return\n        }\n\n        previous(currentIndex, picturesList.length - 1)\n        break\n      }\n      case 'Enter': {\n        if (isDisabled) return;\n        if (e.repeat) return;\n        const node = document.querySelector('#input-box')\n        const isBoxOpen = !!node.getAttribute('aria-activedescendant')\n        if (isBoxOpen) return\n        if (value === '' || !/[^0-9]/.test(value)) return addTag(value)\n        if (galeries.map(galery=>galery.code).includes(value)) addTag(value)\n        else {\n          node.style.outline = \"2px solid red\";\n          setTimeout(()=>{\n            node.style.outline = \"none\";\n          }, 300)\n        }\n        break\n      }\n      case ' ': {\n        if (!/[^0-9]/.test(value)) e.preventDefault()\n        if (lastTag.length !== 0 && value === '') {\n          tags[currentImage] = [...lastTag]\n          setTags({ ...tags })\n          next(currentIndex, picturesList.length - 1)\n        }\n        break\n      }\n      case '-': {\n        e.preventDefault()\n        tags[currentImage].pop()\n        setTags({ ...tags })\n        break\n      }\n      default: {\n        break\n      }\n    }\n  }\n\n  function next(i, len) {\n    console.log(currentIndex);\n    if (i === len) return\n    setCurrentIndex(currentIndex + 1)\n    setCurrentImage(picturesList[currentIndex + 1])\n  }\n\n  function previous(i, len) {\n    if (i === 0) return\n    setCurrentIndex(currentIndex - 1)\n    setCurrentImage(picturesList[currentIndex - 1])\n  }\n\n\n\n  const options = /[^0-9]/.test(value)\n    ? galeries.map(option => option.display)\n    : []\n\n  return (\n    <Autocomplete\n      className=\"bib-input-box\"\n      id=\"input-box\"\n      freeSolo\n      autoHighlight={true}\n      disableClearable\n      options={options}\n      inputValue={value}\n      onInputChange={(e, val) => {\n        if (isDisabled) return;\n        if (!e) return\n        if (e.type === 'change') setValue(val)\n        if (e.type === 'click') {\n          const galery = galeries.find(galery => galery.display === val)\n          addTag(galery.code)\n        }\n        if (e.key === 'Enter') {\n          const galeryValue = galeries.find(galery => galery.code === value);\n          if (galeryValue) return addTag(galeryValue.code);\n          const galery = galeries.find(galery => galery.display === val)\n          addTag(galery.code)\n        }\n      }}\n      onKeyDown={e => handleKeyDown(e)}\n      renderInput={params => (\n        <TextField\n          disabled={isDisabled}\n          focused={!isDisabled}\n          {...params}\n          label=\"bib or galery\"\n          margin=\"dense\"\n          variant=\"standard\"\n        />\n      )}\n    />\n  )\n}\n",["92","93"],"/home/vitor/Desktop/personal/km_tag/src/styles/GlobalStyles.js",[],"/home/vitor/Desktop/personal/km_tag/src/components/TagsPanel/BibList.js",[],"/home/vitor/Desktop/personal/km_tag/src/contexts/CurrentImage.js",[],["94","95"],"/home/vitor/Desktop/personal/km_tag/src/contexts/Images.js",[],"/home/vitor/Desktop/personal/km_tag/src/defaultGaleries.js",[],{"ruleId":"96","severity":1,"message":"97","line":14,"column":59,"nodeType":"98","messageId":"99","endLine":14,"endColumn":63},{"ruleId":"96","severity":1,"message":"100","line":15,"column":10,"nodeType":"98","messageId":"99","endLine":15,"endColumn":22},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"96","severity":1,"message":"105","line":5,"column":98,"nodeType":"98","messageId":"99","endLine":5,"endColumn":108},{"ruleId":"101","replacedBy":"106"},{"ruleId":"103","replacedBy":"107"},{"ruleId":"101","replacedBy":"108"},{"ruleId":"103","replacedBy":"109"},{"ruleId":"96","severity":1,"message":"110","line":1,"column":10,"nodeType":"98","messageId":"99","endLine":1,"endColumn":20},{"ruleId":"96","severity":1,"message":"111","line":1,"column":22,"nodeType":"98","messageId":"99","endLine":1,"endColumn":35},{"ruleId":"96","severity":1,"message":"112","line":1,"column":37,"nodeType":"98","messageId":"99","endLine":1,"endColumn":49},{"ruleId":"96","severity":1,"message":"113","line":11,"column":7,"nodeType":"98","messageId":"99","endLine":11,"endColumn":14},{"ruleId":"101","replacedBy":"114"},{"ruleId":"103","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":45,"column":5,"nodeType":"118","endLine":45,"endColumn":12,"suggestions":"119"},{"ruleId":"101","replacedBy":"120"},{"ruleId":"103","replacedBy":"121"},{"ruleId":"101","replacedBy":"122"},{"ruleId":"103","replacedBy":"123"},"no-unused-vars","'tags' is assigned a value but never used.","Identifier","unusedVar","'currentImage' is assigned a value but never used.","no-native-reassign",["124"],"no-negated-in-lhs",["125"],"'tagsString' is assigned a value but never used.",["124"],["125"],["124"],["125"],"'existsSync' is defined but never used.","'writeFileSync' is defined but never used.","'readFileSync' is defined but never used.","'appPath' is assigned a value but never used.",["124"],["125"],"react-hooks/exhaustive-deps","React Hook useMemo has an unnecessary dependency: 'clock'. Either exclude it or remove the dependency array.","ArrayExpression",["126"],["124"],["125"],["124"],["125"],"no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},"Update the dependencies array to be: []",{"range":"129","text":"130"},[1245,1252],"[]"]